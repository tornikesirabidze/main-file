'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var Accessibility = require('./modules/Accessibility.js');
var Animations = require('./modules/Animations.js');
var Autoplay = require('./modules/Autoplay.js');
var Controller = require('./modules/Controller.js');
var IntersectionObserver = require('./modules/IntersectionObserver.js');
var Layout = require('./modules/Layout.js');
var Manager = require('./modules/Manager.js');
var Settings = require('./modules/Settings.js');
var Orchestrator = require('./Orchestrator.js');

function HeroSlider(props) {
    return (jsxRuntime.jsx(Layout.LayoutProvider, { children: jsxRuntime.jsx(Manager.ManagerProvider, Object.assign({ manager: props.manager }, { children: jsxRuntime.jsx(Settings.SettingsProvider, Object.assign({ settings: props.settings }, { children: jsxRuntime.jsx(Controller.ControllerProvider, Object.assign({ controller: props.controller }, { children: jsxRuntime.jsx(Accessibility.AccessibilityProvider, Object.assign({ accessibility: props.accessibility }, { children: jsxRuntime.jsx(Animations.AnimationsProvider, Object.assign({ animations: props.animations }, { children: jsxRuntime.jsx(IntersectionObserver.IntersectionObserverProvider, { children: jsxRuntime.jsx(Autoplay.AutoplayProvider, Object.assign({ autoplay: props.autoplay }, { children: jsxRuntime.jsx(Orchestrator.Orchestrator, Object.assign({ className: props.className, width: props.width, height: props.height, style: props.style }, { children: props.children })) })) }) })) })) })) })) })) }));
}

exports["default"] = HeroSlider;
//# sourceMappingURL=HeroSlider.js.map
