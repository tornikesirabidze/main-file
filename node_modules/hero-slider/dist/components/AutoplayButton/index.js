'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var Autoplay = require('../../modules/Autoplay.js');
var IntervalTimer = require('../../modules/IntervalTimer.js');
var composeCssClasses = require('../../utils/composeCssClasses.js');
var index_module = require('./index.module.css.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var ButtonType;
(function (ButtonType) {
    ButtonType["PLAY"] = "play";
    ButtonType["PAUSE"] = "pause";
})(ButtonType || (ButtonType = {}));
class AutoplaySvg {
    static getPath(buttonType) {
        if (buttonType === ButtonType.PAUSE)
            return AutoplaySvg.pausePath;
        else
            return AutoplaySvg.playPath;
    }
}
AutoplaySvg.playPath = 'M 12,26 18.5,22 18.5,14 12,10 z M 18.5,22 25,18 25,18 18.5,14 z';
AutoplaySvg.pausePath = 'M 12,26 16,26 16,10 12,10 z M 21,26 25,26 25,10 21,10 z';
function AutoplayButton(props) {
    const { className, style, position = {
        bottom: '0',
        left: '0'
    } } = props;
    const { state: { isPausedByUser }, autoplayState, resume, pause } = Autoplay.useAutoplay();
    const [buttonType, setButtonType] = React__default["default"].useState(autoplayState !== IntervalTimer.IntervalState.IDLE ? ButtonType.PAUSE : ButtonType.PLAY);
    const onClickHandler = (event) => {
        event.stopPropagation();
        if (isPausedByUser)
            resume();
        else
            pause();
    };
    React__default["default"].useEffect(() => {
        if (isPausedByUser && autoplayState === IntervalTimer.IntervalState.IDLE)
            setButtonType(ButtonType.PLAY);
        else if (isPausedByUser && autoplayState === IntervalTimer.IntervalState.PAUSED)
            setButtonType(ButtonType.PLAY);
        else
            setButtonType(ButtonType.PAUSE);
    }, [isPausedByUser, autoplayState]);
    return (jsxRuntime.jsx("button", Object.assign({ "data-testid": "hero-slider-autoplay-button", className: composeCssClasses.composeCssClasses('hero-slider-autoplay-button', index_module["default"].Button, className), onClick: onClickHandler, style: Object.assign(Object.assign({}, position), style) }, { children: jsxRuntime.jsx("svg", Object.assign({ fill: "currentColor", height: "100%", width: "100%", viewBox: "0 0 36 36" }, { children: jsxRuntime.jsx("path", { d: AutoplaySvg.getPath(buttonType) }) })) })));
}
AutoplayButton.displayName =
    'hero-slider/autoplay-button';

exports.AutoplayButton = AutoplayButton;
//# sourceMappingURL=index.js.map
