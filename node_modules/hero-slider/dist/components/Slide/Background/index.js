'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib_es6 = require('../../../node_modules/.pnpm/@rollup_plugin-typescript@8.5.0_rollup@2.79.1_tslib@2.4.0_typescript@4.8.3/node_modules/tslib/tslib.es6.js');
var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var composeCssClasses = require('../../../utils/composeCssClasses.js');
var index_module = require('./index.module.css.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

/**
 * Type definition for `BackgroundProps.backgroundAnimation`.
 */
exports.BackgroundAnimation = void 0;
(function (BackgroundAnimation) {
    BackgroundAnimation["FADE"] = "fade";
    BackgroundAnimation["ZOOM"] = "zoom";
})(exports.BackgroundAnimation || (exports.BackgroundAnimation = {}));
function Background(props) {
    const { backgroundAnimation = exports.BackgroundAnimation.FADE, backgroundImageClassName, backgroundImageBlendMode, backgroundImageSizes, backgroundImageSrcSet, backgroundImageSrc, backgroundImageAlt, backgroundImageStyle, 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    maskBackgroundBlendMode: _, // Not used.
    shouldLazyLoad = true, onLoad } = props, background = tslib_es6.__rest(props, ["backgroundAnimation", "backgroundImageClassName", "backgroundImageBlendMode", "backgroundImageSizes", "backgroundImageSrcSet", "backgroundImageSrc", "backgroundImageAlt", "backgroundImageStyle", "maskBackgroundBlendMode", "shouldLazyLoad", "onLoad"]);
    const [isLoaded, setIsLoaded] = React__default["default"].useState(false);
    const onLoadHandler = (event) => {
        if (onLoad)
            onLoad(event);
        setIsLoaded(true);
    };
    /**
     * If there is no `backgroundImageSrc`, then there is no need to:
     * - Add the `Loading` class is not needed, instead the default class is `Loaded`.
     * - `img` tag element will not render.
     */
    const imageBackgroundClassNames = [];
    if (isLoaded) {
        imageBackgroundClassNames.push(index_module["default"].Loaded);
        switch (backgroundAnimation) {
            case exports.BackgroundAnimation.ZOOM:
                imageBackgroundClassNames.push(index_module["default"].ZoomOut);
                break;
            case exports.BackgroundAnimation.FADE:
                imageBackgroundClassNames.push(index_module["default"].FadeIn);
                break;
        }
    }
    else {
        imageBackgroundClassNames.push(index_module["default"].Loading);
    }
    return (jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses('hero-slider-slide-background', backgroundImageClassName, index_module["default"].Background), style: background }, { children: jsxRuntime.jsx("img", { className: composeCssClasses.composeCssClasses('hero-slider-slide-background-image', backgroundImageClassName, index_module["default"].Image, ...imageBackgroundClassNames), sizes: backgroundImageSizes, srcSet: backgroundImageSrcSet, src: backgroundImageSrc, alt: backgroundImageAlt, style: Object.assign({ mixBlendMode: backgroundImageBlendMode }, backgroundImageStyle), onLoad: onLoadHandler, loading: shouldLazyLoad ? 'lazy' : 'eager' }) })));
}

exports["default"] = Background;
//# sourceMappingURL=index.js.map
