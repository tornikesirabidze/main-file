'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var Controller = require('../../modules/Controller.js');
var Manager = require('../../modules/Manager.js');
var composeCssClasses = require('../../utils/composeCssClasses.js');
var index_module = require('./index.module.css.js');

function SideNav({ color, activeColor, left, right, isPositionedRight = true, position = {
    bottom: undefined,
    top: '50%',
    left: !isPositionedRight ? left || '1rem' : undefined,
    right: isPositionedRight ? right || '1rem' : undefined,
    transform: 'translateY(-50%)'
} }) {
    const { state: { slides, totalSlides } } = Manager.useManager();
    const { state: { activeSlide }, changeSlide } = Controller.useController();
    function renderButtons() {
        if (!totalSlides)
            return [];
        const onClickHandler = (slideNumber) => {
            if (slideNumber !== activeSlide)
                changeSlide(slideNumber);
        };
        return Array.from(slides.values()).map(({ number }) => {
            return (
            // TODO: Deal with the disabled linting later:
            // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events
            jsxRuntime.jsxs("li", Object.assign({ className: composeCssClasses.composeCssClasses('hero-slider-side-nav-button', index_module["default"].Button, {
                    className: index_module["default"].Active,
                    useIf: activeSlide === number
                }), onClick: () => onClickHandler(number), style: {
                    justifyContent: isPositionedRight ? 'flex-end' : 'flex-start'
                } }, { children: [jsxRuntime.jsx("span", { className: composeCssClasses.composeCssClasses('hero-slider-side-nav-button-line', index_module["default"].Line) }), jsxRuntime.jsx("span", Object.assign({ className: composeCssClasses.composeCssClasses('hero-slider-side-nav-button-number', index_module["default"].Number) }, { children: number.toLocaleString() }))] }), number));
        });
    }
    /**
     * CSS variables for the transitions.
     */
    const CSSVariables = {
        '--nav-color': color,
        '--nav-active-color': activeColor
    };
    return (jsxRuntime.jsx("ul", Object.assign({ className: composeCssClasses.composeCssClasses('hero-slider-side-nav-wrapper', index_module["default"].Wrapper), style: Object.assign(Object.assign({}, position), CSSVariables) }, { children: renderButtons() })));
}
SideNav.displayName = 'hero-slider/nav';

exports.SideNav = SideNav;
//# sourceMappingURL=index.js.map
