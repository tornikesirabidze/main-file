{"version":3,"file":"index.js","sources":["../../../src/components/Nav/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useController } from '../../modules/Controller';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport NavModuleCss from './index.module.css';\n\n/**\n * Defines the position of the navigation component.\n */\nexport interface NavPosition {\n  top?: React.CSSProperties['top'];\n  left?: React.CSSProperties['left'];\n  bottom?: React.CSSProperties['bottom'];\n  right?: React.CSSProperties['right'];\n  transform?: React.CSSProperties['transform'];\n}\n\n/**\n * `Nav` component props.\n */\nexport interface NavProps {\n  /**\n   * Object of CSS properties `top`, `left`, `bottom`, and `right` used to absolutely position elements.\n   * Aside from the former, you can also set the CSS `transform` property to help you center the element.\n   * @default\n   * {\n   *    bottom: '1.5rem',\n   *    left: '50%',\n   *    transform: 'translateX(-50%)'\n   * }\n   */\n  position?: NavPosition;\n  /**\n   * Defines `--nav-color` CSS variable.\n   */\n  color?: string;\n  /**\n   * Defines `--nav-active-color` CSS variable.\n   */\n  activeColor?: string;\n}\n\nexport function Nav({\n  color,\n  activeColor,\n  position = {\n    bottom: '1.5rem',\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }\n}: NavProps) {\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ number }) => {\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        <li\n          key={number}\n          className={composeCssClasses(\n            'hero-slider-nav-button',\n            NavModuleCss.Button,\n            { className: NavModuleCss.Active, useIf: activeSlide === number }\n          )}\n          onClick={() => onClickHandler(number)}\n        />\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <ul\n      className={composeCssClasses(\n        'hero-slider-nav-wrapper',\n        NavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables\n      }}\n    >\n      {renderButtons()}\n    </ul>\n  );\n}\n\n(Nav as React.FunctionComponent).displayName = 'hero-slider/nav';\n"],"names":["useManager","useController","_jsx","composeCssClasses","NavModuleCss"],"mappings":";;;;;;;;;;AA2CM,SAAU,GAAG,CAAC,EAClB,KAAK,EACL,WAAW,EACX,QAAQ,GAAG;AACT,IAAA,MAAM,EAAE,QAAQ;AAChB,IAAA,IAAI,EAAE,KAAK;AACX,IAAA,SAAS,EAAE,kBAAkB;CAC9B,EACQ,EAAA;AACT,IAAA,MAAM,EACJ,KAAK,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,EAC/B,GAAGA,kBAAU,EAAE,CAAC;AAEjB,IAAA,MAAM,EACJ,KAAK,EAAE,EAAE,WAAW,EAAE,EACtB,WAAW,EACZ,GAAGC,wBAAa,EAAE,CAAC;AAEpB,IAAA,SAAS,aAAa,GAAA;AACpB,QAAA,IAAI,CAAC,WAAW;AAAE,YAAA,OAAO,EAAE,CAAC;AAE5B,QAAA,MAAM,cAAc,GAAG,CAAC,WAAmB,KAAI;YAC7C,IAAI,WAAW,KAAK,WAAW;gBAAE,WAAW,CAAC,WAAW,CAAC,CAAC;AAC5D,SAAC,CAAC;AAEF,QAAA,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,KAAI;YACpD;;;AAGE,YAAAC,cAAA,CAAA,IAAA,EAAA,EAEE,SAAS,EAAEC,mCAAiB,CAC1B,wBAAwB,EACxBC,uBAAY,CAAC,MAAM,EACnB,EAAE,SAAS,EAAEA,uBAAY,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,KAAK,MAAM,EAAE,CAClE,EACD,OAAO,EAAE,MAAM,cAAc,CAAC,MAAM,CAAC,IANhC,MAAM,CAOX,EACF;AACJ,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;AACH,IAAA,MAAM,YAAY,GAAG;AACnB,QAAA,aAAa,EAAE,KAAK;AACpB,QAAA,oBAAoB,EAAE,WAAW;KAClC,CAAC;IAEF,QACEF,qCACE,SAAS,EAAEC,mCAAiB,CAC1B,yBAAyB,EACzBC,uBAAY,CAAC,OAAO,CACrB,EACD,KAAK,EACA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,CACR,EAAA,YAAY,iBAGhB,aAAa,EAAE,EACb,CAAA,CAAA,EACL;AACJ,CAAC;AAEA,GAA+B,CAAC,WAAW,GAAG,iBAAiB;;;;"}