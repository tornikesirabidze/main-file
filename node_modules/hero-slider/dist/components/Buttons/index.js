'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var Accessibility = require('../../modules/Accessibility.js');
var Controller = require('../../modules/Controller.js');
var Manager = require('../../modules/Manager.js');
var composeCssClasses = require('../../utils/composeCssClasses.js');
var index_module = require('./index.module.css.js');

function ArrowSvg() {
    return (jsxRuntime.jsx("svg", Object.assign({ width: "60px", height: "60px", strokeWidth: "5", version: "1.1", viewBox: "0 0 129 129" }, { children: jsxRuntime.jsx("g", Object.assign({ fill: "currentColor" }, { children: jsxRuntime.jsx("path", { d: "m40.4,121.3c-0.8,0.8-1.8,1.2-2.9,1.2s-2.1-0.4-2.9-1.2c-1.6-1.6-1.6-4.2 0-5.8l51-51-51-51c-1.6-1.6-1.6-4.2 0-5.8 1.6-1.6 4.2-1.6 5.8,0l53.9,53.9c1.6,1.6 1.6,4.2 0,5.8l-53.9,53.9z" }) })) })));
}
function Buttons() {
    const { state: { isMobile } } = Manager.useManager();
    const { orientation } = Accessibility.useAccessibility();
    const { goToPreviousSlide, goToNextSlide } = Controller.useController();
    if (isMobile)
        return null;
    const isHorizontal = orientation === Accessibility.AccessibilityOrientation.HORIZONTAL;
    return (jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [jsxRuntime.jsx("div", Object.assign({ "data-testid": "hero-slider-previous", className: composeCssClasses.composeCssClasses('hero-slider-previous', index_module["default"].Previous, index_module["default"].Wrapper, { className: index_module["default"].Horizontal, useIf: isHorizontal }, { className: index_module["default"].Vertical, useIf: !isHorizontal }) }, { children: jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses('hero-slider-previous-container', index_module["default"].Container) }, { children: jsxRuntime.jsx("button", Object.assign({ "data-testid": "hero-slider-previous-button", className: composeCssClasses.composeCssClasses('hero-slider-previous-button', index_module["default"].Button), onClick: goToPreviousSlide }, { children: jsxRuntime.jsx(ArrowSvg, {}) })) })) })), jsxRuntime.jsx("div", Object.assign({ "data-testid": "hero-slider-next", className: composeCssClasses.composeCssClasses('hero-slider-next', index_module["default"].Next, index_module["default"].Wrapper, { className: index_module["default"].Horizontal, useIf: isHorizontal }, { className: index_module["default"].Vertical, useIf: !isHorizontal }) }, { children: jsxRuntime.jsx("div", Object.assign({ className: composeCssClasses.composeCssClasses('hero-slider-next-container', index_module["default"].Container) }, { children: jsxRuntime.jsx("button", Object.assign({ "data-testid": "hero-slider-next-button", className: composeCssClasses.composeCssClasses('hero-slider-next-button', index_module["default"].Button), onClick: goToNextSlide }, { children: jsxRuntime.jsx(ArrowSvg, {}) })) })) }))] }));
}

exports["default"] = Buttons;
//# sourceMappingURL=index.js.map
