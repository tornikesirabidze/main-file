{"version":3,"file":"index.js","sources":["../../../src/components/MenuNav/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useController } from '../../modules/Controller';\nimport { useLayout } from '../../modules/Layout';\nimport { useManager } from '../../modules/Manager';\nimport { composeCssClasses } from '../../utils/composeCssClasses';\nimport { Nav, NavProps } from '../Nav';\nimport MenuNavModuleCss from './index.module.css';\n\n/**\n * `MenuNav` component props.\n */\nexport interface MenuNavProps extends NavProps {\n  /**\n   * Determines how the browser distributes space between and around nav items along the component.\n   */\n  justifyContent?: React.CSSProperties['justifyContent'];\n  /**\n   * Given the nature of this component, it doesn't work well with devices of relatively small width.\n   * The mobile threshold is the point in which this component turns into a basic `Nav` component or `null`.\n   */\n  mobileThreshold?: number;\n  /**\n   * Determines if the nav should render `null` or a basic `Nav` component after the threshold is reached.\n   * @default false\n   */\n  isNullAfterThreshold?: boolean;\n  /**\n   * An extra button rendered among the nav items in case the developer may want any extra functionality in the component.\n   */\n  extraButton?: React.ReactNode;\n  /**\n   * Renders the button to the right side of the nav if true, otherwise it will appear at the left side.\n   * @default true\n   */\n  isExtraButtonRight?: boolean;\n}\n\nexport function MenuNav(props: MenuNavProps) {\n  const {\n    color,\n    activeColor,\n    position = {\n      bottom: '0',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    justifyContent = 'center',\n    mobileThreshold: componentMobileThreshold,\n    isNullAfterThreshold,\n    extraButton,\n    isExtraButtonRight = true\n  } = props;\n\n  const {\n    state: { width },\n    mobileThreshold\n  } = useLayout();\n\n  const {\n    state: { slides, totalSlides }\n  } = useManager();\n\n  const {\n    state: { activeSlide },\n    changeSlide\n  } = useController();\n\n  if (Number(width) <= (componentMobileThreshold ?? mobileThreshold)) {\n    if (isNullAfterThreshold) return null;\n    return <Nav {...props} />;\n  }\n\n  function renderButtons() {\n    if (!totalSlides) return [];\n\n    const onClickHandler = (slideNumber: number) => {\n      if (slideNumber !== activeSlide) changeSlide(slideNumber);\n    };\n\n    return Array.from(slides.values()).map(({ label, number }, index) => {\n      const description = label;\n      return (\n        // TODO: Deal with the disabled linting later:\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n        <li\n          key={index}\n          className={composeCssClasses(\n            'hero-slider-menu-nav-button',\n            MenuNavModuleCss.Button,\n            {\n              className: MenuNavModuleCss.Active,\n              useIf: activeSlide === number\n            }\n          )}\n          onClick={() => onClickHandler(number)}\n        >\n          <div\n            className={composeCssClasses(\n              'hero-slider-menu-nav-button-description',\n              MenuNavModuleCss.Description\n            )}\n          >\n            <div\n              className={composeCssClasses(\n                'hero-slider-menu-nav-button-number',\n                MenuNavModuleCss.Number\n              )}\n            >\n              {number}\n              <span\n                className={composeCssClasses(\n                  'hero-slider-menu-nav-button-square',\n                  MenuNavModuleCss.Square\n                )}\n              />\n            </div>\n            <div\n              className={composeCssClasses(\n                'hero-slider-menu-nav-button-text',\n                MenuNavModuleCss.Text\n              )}\n            >\n              {description}\n            </div>\n          </div>\n        </li>\n      );\n    });\n  }\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const CSSVariables = {\n    '--nav-color': color,\n    '--nav-active-color': activeColor\n  };\n\n  return (\n    <div\n      className={composeCssClasses(\n        'hero-slider-menu-nav-wrapper',\n        MenuNavModuleCss.Wrapper\n      )}\n      style={{\n        ...position,\n        ...CSSVariables,\n        justifyContent\n      }}\n    >\n      {extraButton && (\n        <div\n          className={composeCssClasses(\n            'hero-slider-menu-nav-extra',\n            MenuNavModuleCss.Extra\n          )}\n          style={{\n            order: isExtraButtonRight ? 1 : 0\n          }}\n        >\n          <span\n            className={composeCssClasses(\n              'hero-slider-menu-nav-extra-button',\n              MenuNavModuleCss.ExtraButton\n            )}\n            style={{\n              borderLeft: isExtraButtonRight\n                ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))'\n                : undefined,\n              borderRight: !isExtraButtonRight\n                ? '1px solid var(--nav-color, rgba(215, 225, 235, 0.6))'\n                : undefined\n            }}\n          >\n            {extraButton}\n          </span>\n        </div>\n      )}\n      <ul\n        className={composeCssClasses(\n          'hero-slider-menu-nav-container',\n          MenuNavModuleCss.Container\n        )}\n      >\n        {renderButtons()}\n        <span\n          className={composeCssClasses(\n            'hero-slider-menu-nav-bar',\n            MenuNavModuleCss.Bar\n          )}\n          style={{\n            width: `${100 / totalSlides}%`,\n            transform: `translate3d(${activeSlide - 1}00%, 0, 0)`\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\n(MenuNav as React.FunctionComponent).displayName = 'hero-slider/menu-nav';\n"],"names":["useLayout","useManager","useController","_jsx","Nav","composeCssClasses","MenuNavModuleCss","_jsxs"],"mappings":"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"}